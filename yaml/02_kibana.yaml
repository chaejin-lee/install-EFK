apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: kube-logging
  labels:
    app: kibana
spec:
  type: ClusterIP
  ports:
  - port: 5601
    targetPort: 5601
  selector:
    app: kibana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: kube-logging
  labels:
    app: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
      - name: gatekeeper
        image: quay.io/keycloak/keycloak-gatekeeper:{GATEKEEPER_VERSION}
        imagePullPolicy: Always
        args:
        - --client-id={HYPERAUTH_CLIENT}
        - --client-secret={HYPERAUTH_CLIENT_SECRET}
        - --listen=:3000
        - --upstream-url=http://127.0.0.1:5601
        - --discovery-url=https://{HYPERAUTH_URL}/auth/realms/{HYPERAUTH_REALM}
        - --secure-cookie=false
        - --skip-openid-provider-tls-verify=true
        - --enable-self-signed-tls
        - --skip-upstream-tls-verify=true
        - --upstream-keepalives=false
        - --enable-default-deny=true
        - --enable-refresh-tokens=true
        - --enable-metrics=true
        - --encryption-key={ENCRYPTION_KEY}
        - --resources=uri=/*|roles={HYPERAUTH_CLIENT}:{HYPERAUTH_CLIENT_ROLE}
        - --verbose
        ports:
        - containerPort: 3000
          name: service
      - name: kibana
        image: docker.elastic.co/kibana/kibana:{KIBANA_VERSION}
        resources:
          limits:
            cpu: 300m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        env:
          - name: ELASTICSEARCH_URL
            value: http://elasticsearch.kube-logging.svc.cluster.local:9200
        ports:
        - containerPort: 5601
        volumeMounts:
        - mountPath: /usr/share/kibana/config/kibana.yml
          name: config
          subPath: kibana.yml
      volumes:
      - name: config
        configMap:
          name: kibana-config
---
apiVersion: v1
data:
  kibana.yml: |
    server.name: kibana
    server.host: "0"
    elasticsearch.hosts: [ "http://elasticsearch:9200" ]
    elasticsearch.requestTimeout: "100000ms"
kind: ConfigMap
metadata:
  name: kibana-config
  namespace: kube-logging

