apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: kube-logging
  labels:
    app: kibana
  annotations:
    traefik.ingress.kubernetes.io/service.serverstransport: tmaxcloud@file
spec:
  type: ClusterIP
  ports:
  - port: 443
    targetPort: 3000
  selector:
    app: kibana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: kube-logging
  labels:
    app: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      serviceAccount: efk-service-account
      containers:
      - name: gatekeeper
        image: quay.io/keycloak/keycloak-gatekeeper:{GATEKEEPER_VERSION}
        imagePullPolicy: Always
        args:
        - --client-id=kibana
        - --client-secret={KIBANA_CLIENT_SECRET}
        - --listen=:3000
        - --upstream-url=http://127.0.0.1:5601
        - --discovery-url=https://{HYPERAUTH_URL}/auth/realms/tmax
        - --secure-cookie=false
        - --skip-openid-provider-tls-verify=true
        - --enable-self-signed-tls=false
        - --tls-cert=/etc/secrets/tls.crt 
        - --tls-private-key=/etc/secrets/tls.key
        - --tls-ca-certificate=/etc/secrets/ca.crt
        - --skip-upstream-tls-verify=true
        - --upstream-keepalives=false
        - --enable-default-deny=true
        - --enable-refresh-tokens=true
        - --enable-metrics=true
        - --encryption-key={ENCRYPTION_KEY}
        - --resources=uri=/*|roles=kibana:kibana-manager
        - --verbose
        ports:
        - containerPort: 3000
          name: service
        volumeMounts:
          - name: secret
            mountPath: "/etc/secrets"
            readOnly: true
      - name: kibana
        image: docker.elastic.co/kibana/kibana:{KIBANA_VERSION}
        resources:
          limits:
            cpu: 500m
            memory: 1000Mi
          requests:
            cpu: 500m
            memory: 1000Mi
        env:
          - name: ELASTICSEARCH_URL
            value: http://elasticsearch.kube-logging.svc.cluster.local:9200
        ports:
        - containerPort: 5601
        volumeMounts:
        - mountPath: /usr/share/kibana/config/kibana.yml
          name: config
          subPath: kibana.yml
      volumes:
      - name: secret
        secret:
          secretName: kibana-secret
      - name: config
        configMap:
          name: kibana-config
---
apiVersion: v1
data:
  kibana.yml: |
    server.name: kibana
    server.host: "0"
    elasticsearch.hosts: [ "http://elasticsearch:9200" ]
    elasticsearch.requestTimeout: "100000ms"
kind: ConfigMap
metadata:
  name: kibana-config
  namespace: kube-logging

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    ingress.tmaxcloud.org/name: kibana
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    cert-manager.io/cluster-issuer: tmaxcloud-issuer
  name: kibana
  namespace: kube-logging
spec:
  ingressClassName: tmax-cloud
  rules:
  - host: kibana.{CUSTOM_DOMAIN_NAME}
    http:
      paths:
      - backend:
          service:
            name: kibana
            port:
              number: 443
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - kibana.{CUSTOM_DOMAIN_NAME}

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kibana-cert
  namespace: kube-logging
spec:
  secretName: kibana-secret
  isCA: false
  usages:
    - digital signature
    - key encipherment
    - server auth
    - client auth
  dnsNames:
    - "tmax-cloud"
    - "kibana.kube-logging.svc"
  issuerRef:
    kind: ClusterIssuer
    group: cert-manager.io
    name: tmaxcloud-issuer
